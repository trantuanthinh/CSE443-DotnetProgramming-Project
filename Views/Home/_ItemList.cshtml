@model IEnumerable<Project.Models.Item>
@using Project.Utils;

@if (Model.Any())
{
    <div id="itemList" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-6 w-full">
        @foreach (var item in Model)
        {
            <div class="searchable border rounded-lg shadow hover:shadow-lg transition p-4 flex flex-col items-center text-center"
                data-name="@item.Name.ToLower()">
                <div class="w-32 h-32 mb-3 bg-gray-100">
                    <img src="data:image/jpeg;base64,@item.Image" alt="@item.Name" class="w-30 h-30 object-cover rounded" />
                </div>

                <p class="text-sm font-semibold mb-1 truncate">@item.Name</p>
                <p class="text-xs text-gray-500 mb-2">
                    Available: <span class="font-medium">@item.Quantity</span>
                </p>

                @{
                    bool isOutOfStock = item.Quantity == 0;
                    bool isManager = User.IsInRole(UserType.Manager.ToString());
                    string buttonText = isOutOfStock ? "Out of stock" : (isManager ? "Manager cannot borrow" : "Borrow");
                    string disabledAttr = (isOutOfStock || isManager) ? "disabled" : "";
                    string onClickAttr = (!isOutOfStock && !isManager) ? $"openModal('{item.Id}', '{item.Name}', {item.Quantity})" : "";
                }

                <button type="button"
                        class="bg-black text-white text-sm font-medium px-3 py-1 rounded hover:bg-gray-800 disabled:opacity-50 disabled:bg-red-600"
                        onclick="@onClickAttr"
                        @disabledAttr>
                    @buttonText
                </button>
    </div>
        }
    </div>
}
else
{
    <p class="text-gray-500">No items found.</p>
}
